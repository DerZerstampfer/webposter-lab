import { Webposter } from '@/components/Webposter'
import { prisma } from '@/lib/db'
import { notFound, redirect } from 'next/navigation'

export default async function Page({
  searchParams,
}: {
  searchParams: { [key: string]: string | string[] | undefined }
}) {
  if (searchParams['secret'] !== process.env.ADMIN_SECRET) {
    notFound()
  }

  const webposters = await prisma.webposter.findMany({
    where: {
      published: false,
    },
    orderBy: {
      createdAt: 'desc',
    },
    take: 16,
  })

  const publishWebposter = async (formData: FormData) => {
    'use server'

    await prisma.webposter.update({
      where: { id: formData.get('id') as string },
      data: { published: true },
    })

    redirect(`/admin?secret=${formData.get('secret') as string}`)
  }

  return (
    <main className="flex min-h-[100svh] flex-col items-center justify-around gap-4 px-4">
      <div>
        <div className="mb-8 flex flex-col gap-2">
          <h4 className="text-5xl font-semibold md:text-6xl">
            Unpublished newest Posters
          </h4>
          <p className="font-mono text-lg text-muted-foreground">
            Some unpublished posters generated by the community.
          </p>
        </div>
        <div className="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2 md:grid-cols-3 md:gap-y-10 lg:grid-cols-4">
          {webposters.map((webposter) => (
            <form key={webposter.id} action={publishWebposter}>
              <input type="hidden" name="id" value={webposter.id} />
              <input
                type="hidden"
                name="secret"
                value={searchParams['secret']}
              />
              <button type="submit">
                <Webposter webposter={webposter} />
              </button>
            </form>
          ))}
        </div>
      </div>
    </main>
  )
}
